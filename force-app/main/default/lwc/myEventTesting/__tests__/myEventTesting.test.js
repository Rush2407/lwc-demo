import { createElement } from 'lwc';
import MyEventTesting from 'c/myEventTesting';

describe('c-my-event-testing', () => {
    beforeEach(() => {
        const element = createElement('c-my-event-testing', {
            is: MyEventTesting
        });
        document.body.appendChild(element);
    });
    // afterEach(() => {
    //     // The jsdom instance is shared across test cases in a single file so reset the DOM
    //     while (document.body.firstChild) {
    //         document.body.removeChild(document.body.firstChild);
    //     }
    // });

    it('TODO: test case generated by CLI command, please fill in test logic', () => {
        const element = document.querySelector('c-my-event-testing')
            // // Arrange
            // const element = createElement('c-my-event-testing', {
            //     is: MyEventTesting
            // });

        // // Act
        // document.body.appendChild(element);

        // // Assert
        // // const div = element.shadowRoot.querySelector('div');
        const text = element.shadowRoot.querySelector("p");
        expect(text.textContent).toBe("Hello, World!");
    });
    it('TODO: test case generated by CLI command, please fill in test logic !=', () => {
        const element = document.querySelector('c-my-event-testing')
            // // Arrange
            // const element = createElement('c-my-event-testing', {
            //     is: MyEventTesting
            // });

        // // Act
        // document.body.appendChild(element);

        // // Assert
        // // const div = element.shadowRoot.querySelector('div');
        const text = element.shadowRoot.querySelector("p");
        expect(text.textContent).not.toBe("Hello, Rushi!");
    });

    test("test input change event value", () => {
        const element = document.querySelector('c-my-event-testing');
        const inputElement = element.shadowRoot.querySelector("lightning-input");
        inputElement.value = "Salesforce";
        inputElement.dispatchEvent(new CustomEvent('change'))
        const text = element.shadowRoot.querySelector("p");
        return Promise.resolve().then(() => {
            expect(text.textContent).toBe("Hello, Salesforce!")
        })
    })
});